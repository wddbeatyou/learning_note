@classmethod
类方法是绑定到类而不是类的实例（对象）上的方法。这意味着类方法可以访问类的属性和其他方法，但不需要（也不能）访问类的实例的属性和方法。

@overload
它在 Python 的类型提示（type hinting）和类型检查中特别有用。它用于标记有多个可能签名（即参数类型和/或返回类型）的函数或方法。

getattr(obj, attr)
用于获取对象的属性值。这个函数接收两个参数：对象（obj）和属性名（attr），并返回该属性的值。如果指定的属性不存在，getattr() 函数会抛出一个 AttributeError 异常。

dir(obj)
dir(obj) 是一个内置函数，用于返回对象的所有属性和方法的列表。这个列表包含了对象的所有属性（包括方法）的名称。

setattr()
用于设置对象的属性值。这个函数接收三个参数：对象（obj）、属性名（attr）和要设置的值（value）。setattr() 会将 obj 对象中名为 attr 的属性设置为 value。

vars()
用于返回一个对象的__dict__属性。对于大多数对象类型，__dict__属性是一个字典，它映射了对象的属性名到它们的当前值。

__call__() 
是一个特殊方法，用于使一个对象像函数那样可以被调用。当一个对象定义了 __call__() 方法后，你可以使用对象名加上括号的方式来调用它，就像调用一个函数一样。














